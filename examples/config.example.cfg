[simulation]
# locus length to simulate
contiglen=10000
# number of reps under single parameter set
loci=1
# effective population size in present (for scaling)
effective_population_size=1e6
# can be a single float, range [1E-9,1E-8], or file
recombination_rate=3.89e-8
# can be a float, range [1E-9,1E-8], or file
mutation_rate=2.8E-9

[initialize]
# present Ne0 one for each subpopulation
initial_sizes=170000,20000,117000,92000,74000
# number of haplotypes
sample_sizes=12,10,20,18,20
# alpha = -ln(Nt/N0)/gens
growth_rates=0,0,0,0,0
# gene conversion = g/r track_len; e.g., 4.9 518 (comeron et al 2012)
gene_conversion=0,0
migration_matrix=

#[selection]
## sweep is only in pop1 and stops all migration
## use -h to hide sweep snp else seg_sites is wrong
#hide=True
## sweepNe
#sweep_effective_size=
## pop1 Ne, effective popsize of pop1 for alpha
#pop1_effective_size=
## a (2*Ne*alpha), if len(alpha) > 1 will use -Pa [2Nes]
#sel_coeff=0.009
## f freq, if len(freq) > 1 will use -Pf [0.05,0.20]
## to sim hard sweep, set freq=0
#soft_freq=0
## ws time, if len(time) > 1 will use -Pu [gens]
#sweep_time=0.0004
## x 0.5, if len(site) > 1 will use -Px [0,1]
#sweep_site=0.5
## c, if len(partial_sweep) > 1 will use -Pc [0,1]
#partial_sweep=0
## uA 4Ne(uA), uA is the per-base-pair adaptive mutation rate, if len(adapt_rate) >1 will use -PuA [1,2.5]
#adapt_mutrate=0
## ls time 4Ner, distance of sweep offscreen (left) of the window 
#leftRho=0,0
## L 2N*lambda, recurrent hitch-hiking at left of the locus [0,4Ns], lambda = 2E-5
#Lrecurrent=0
## R 2N*lambda, recurrent hitch-hiking at the locus, may be useful to set x as well or allow Px
#Rrecurrent=0

